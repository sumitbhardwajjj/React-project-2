{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  status: 'idle'\n};\nconst productslice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    //  fetchProducts(state,action){\n    //     state.data= action.payload\n    //  }\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.status = 'idle';\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.status = \"ERROR\";\n    });\n  }\n});\nexport const {\n  fetchProducts\n} = productslice.actions;\nexport default productslice.reducer;\nexport const getProducts = createAsyncThunk('product', async () => {\n  const data = await fetch('https://fakestoreapi.com/products');\n  const result = await data.json();\n  return result;\n});\n\n// export function getProducts(){\n//     return async function getProductsThunk(dispatch,getState){\n//         const data = await fetch('https://fakestoreapi.com/products')\n//         const result =await data.json();\n//         dispatch(fetchProducts(result))\n\n//     }\n// }","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","data","status","productslice","name","reducers","extraReducers","builder","addCase","getProducts","pending","state","action","fulfilled","rejected","fetchProducts","actions","reducer","fetch","result","json"],"sources":["C:/Users/91983/Documents/React-project-1/project-1/src/component/Productslice.jsx"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = {\r\n    data:[],\r\n    status: 'idle'\r\n}\r\n\r\nconst productslice = createSlice({\r\n    name: \"products\",\r\n    initialState,\r\n    reducers:{\r\n    //  fetchProducts(state,action){\r\n    //     state.data= action.payload\r\n    //  }\r\n    },\r\n    \r\n        extraReducers:(builder)=>{\r\n            builder\r\n            .addCase(getProducts.pending,(state,action)=>{\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(getProducts.fulfilled,(state,action)=>{\r\n                state.status= 'idle'\r\n            })\r\n            .addCase(getProducts.rejected,(state,action)=>{\r\n                state.status = \"ERROR\"\r\n            })\r\n        }\r\n    \r\n})\r\n\r\nexport const {fetchProducts} = productslice.actions\r\nexport default productslice.reducer\r\n\r\nexport const getProducts = createAsyncThunk('product',async()=>{\r\n    const data = await fetch('https://fakestoreapi.com/products')\r\n    const result =await data.json();\r\n     return result;\r\n})\r\n\r\n// export function getProducts(){\r\n//     return async function getProductsThunk(dispatch,getState){\r\n//         const data = await fetch('https://fakestoreapi.com/products')\r\n//         const result =await data.json();\r\n//         dispatch(fetchProducts(result))\r\n        \r\n//     }\r\n// }\r\n"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAG9D,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAC,EAAE;EACPC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,UAAU;EAChBJ,YAAY;EACZK,QAAQ,EAAC;IACT;IACA;IACA;EAAA,CACC;EAEGC,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CACNC,OAAO,CAACC,WAAW,CAACC,OAAO,EAAC,CAACC,KAAK,EAACC,MAAM,KAAG;MACzCD,KAAK,CAACT,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDM,OAAO,CAACC,WAAW,CAACI,SAAS,EAAC,CAACF,KAAK,EAACC,MAAM,KAAG;MAC3CD,KAAK,CAACT,MAAM,GAAE,MAAM;IACxB,CAAC,CAAC,CACDM,OAAO,CAACC,WAAW,CAACK,QAAQ,EAAC,CAACH,KAAK,EAACC,MAAM,KAAG;MAC1CD,KAAK,CAACT,MAAM,GAAG,OAAO;IAC1B,CAAC,CAAC;EACN;AAER,CAAC,CAAC;AAEF,OAAO,MAAM;EAACa;AAAa,CAAC,GAAGZ,YAAY,CAACa,OAAO;AACnD,eAAeb,YAAY,CAACc,OAAO;AAEnC,OAAO,MAAMR,WAAW,GAAGX,gBAAgB,CAAC,SAAS,EAAC,YAAS;EAC3D,MAAMG,IAAI,GAAG,MAAMiB,KAAK,CAAC,mCAAmC,CAAC;EAC7D,MAAMC,MAAM,GAAE,MAAMlB,IAAI,CAACmB,IAAI,CAAC,CAAC;EAC9B,OAAOD,MAAM;AAClB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}